#ifndef NG_INPUT_HPP
#define NG_INPUT_HPP
namespace ng {

enum MouseButton {
	BUTTON_LEFT = 1,
	BUTTON_MIDDLE = 2,
	BUTTON_RIGHT = 3,
	BUTTON_X1,
	BUTTON_X2
};
	
typedef enum
{
    KEYBOARD_SCANCODE_UNKNOWN = 0,

    KEYBOARD_SCANCODE_A = 4,
    KEYBOARD_SCANCODE_B = 5,
    KEYBOARD_SCANCODE_C = 6,
    KEYBOARD_SCANCODE_D = 7,
    KEYBOARD_SCANCODE_E = 8,
    KEYBOARD_SCANCODE_F = 9,
    KEYBOARD_SCANCODE_G = 10,
    KEYBOARD_SCANCODE_H = 11,
    KEYBOARD_SCANCODE_I = 12,
    KEYBOARD_SCANCODE_J = 13,
    KEYBOARD_SCANCODE_K = 14,
    KEYBOARD_SCANCODE_L = 15,
    KEYBOARD_SCANCODE_M = 16,
    KEYBOARD_SCANCODE_N = 17,
    KEYBOARD_SCANCODE_O = 18,
    KEYBOARD_SCANCODE_P = 19,
    KEYBOARD_SCANCODE_Q = 20,
    KEYBOARD_SCANCODE_R = 21,
    KEYBOARD_SCANCODE_S = 22,
    KEYBOARD_SCANCODE_T = 23,
    KEYBOARD_SCANCODE_U = 24,
    KEYBOARD_SCANCODE_V = 25,
    KEYBOARD_SCANCODE_W = 26,
    KEYBOARD_SCANCODE_X = 27,
    KEYBOARD_SCANCODE_Y = 28,
    KEYBOARD_SCANCODE_Z = 29,

    KEYBOARD_SCANCODE_1 = 30,
    KEYBOARD_SCANCODE_2 = 31,
    KEYBOARD_SCANCODE_3 = 32,
    KEYBOARD_SCANCODE_4 = 33,
    KEYBOARD_SCANCODE_5 = 34,
    KEYBOARD_SCANCODE_6 = 35,
    KEYBOARD_SCANCODE_7 = 36,
    KEYBOARD_SCANCODE_8 = 37,
    KEYBOARD_SCANCODE_9 = 38,
    KEYBOARD_SCANCODE_0 = 39,

    KEYBOARD_SCANCODE_RETURN = 40,
    KEYBOARD_SCANCODE_ESCAPE = 41,
    KEYBOARD_SCANCODE_BACKSPACE = 42,
    KEYBOARD_SCANCODE_TAB = 43,
    KEYBOARD_SCANCODE_SPACE = 44,

    KEYBOARD_SCANCODE_MINUS = 45,
    KEYBOARD_SCANCODE_EQUALS = 46,
    KEYBOARD_SCANCODE_LEFTBRACKET = 47,
    KEYBOARD_SCANCODE_RIGHTBRACKET = 48,
    KEYBOARD_SCANCODE_BACKSLASH = 49, /**< Located at the lower left of the return
                                  *   key on ISO keyboards and at the right end
                                  *   of the QWERTY row on ANSI keyboards.
                                  *   Produces REVERSE SOLIDUS (backslash) and
                                  *   VERTICAL LINE in a US layout, REVERSE
                                  *   SOLIDUS and VERTICAL LINE in a UK Mac
                                  *   layout, NUMBER SIGN and TILDE in a UK
                                  *   Windows layout, DOLLAR SIGN and POUND SIGN
                                  *   in a Swiss German layout, NUMBER SIGN and
                                  *   APOSTROPHE in a German layout, GRAVE
                                  *   ACCENT and POUND SIGN in a French Mac
                                  *   layout, and ASTERISK and MICRO SIGN in a
                                  *   French Windows layout.
                                  */
    KEYBOARD_SCANCODE_NONUSHASH = 50, /**< ISO USB keyboards actually use this code
                                  *   instead of 49 for the same key, but all
                                  *   OSes I've seen treat the two codes
                                  *   identically. So, as an implementor, unless
                                  *   your keyboard generates both of those
                                  *   codes and your OS treats them differently,
                                  *   you should generate KEYBOARD_SCANCODE_BACKSLASH
                                  *   instead of this code. As a user, you
                                  *   should not rely on this code because SDL
                                  *   will never generate it with most (all?)
                                  *   keyboards.
                                  */
    KEYBOARD_SCANCODE_SEMICOLON = 51,
    KEYBOARD_SCANCODE_APOSTROPHE = 52,
    KEYBOARD_SCANCODE_GRAVE = 53, /**< Located in the top left corner (on both ANSI
                              *   and ISO keyboards). Produces GRAVE ACCENT and
                              *   TILDE in a US Windows layout and in US and UK
                              *   Mac layouts on ANSI keyboards, GRAVE ACCENT
                              *   and NOT SIGN in a UK Windows layout, SECTION
                              *   SIGN and PLUS-MINUS SIGN in US and UK Mac
                              *   layouts on ISO keyboards, SECTION SIGN and
                              *   DEGREE SIGN in a Swiss German layout (Mac:
                              *   only on ISO keyboards), CIRCUMFLEX ACCENT and
                              *   DEGREE SIGN in a German layout (Mac: only on
                              *   ISO keyboards), SUPERSCRIPT TWO and TILDE in a
                              *   French Windows layout, COMMERCIAL AT and
                              *   NUMBER SIGN in a French Mac layout on ISO
                              *   keyboards, and LESS-THAN SIGN and GREATER-THAN
                              *   SIGN in a Swiss German, German, or French Mac
                              *   layout on ANSI keyboards.
                              */
    KEYBOARD_SCANCODE_COMMA = 54,
    KEYBOARD_SCANCODE_PERIOD = 55,
    KEYBOARD_SCANCODE_SLASH = 56,

    KEYBOARD_SCANCODE_CAPSLOCK = 57,

    KEYBOARD_SCANCODE_F1 = 58,
    KEYBOARD_SCANCODE_F2 = 59,
    KEYBOARD_SCANCODE_F3 = 60,
    KEYBOARD_SCANCODE_F4 = 61,
    KEYBOARD_SCANCODE_F5 = 62,
    KEYBOARD_SCANCODE_F6 = 63,
    KEYBOARD_SCANCODE_F7 = 64,
    KEYBOARD_SCANCODE_F8 = 65,
    KEYBOARD_SCANCODE_F9 = 66,
    KEYBOARD_SCANCODE_F10 = 67,
    KEYBOARD_SCANCODE_F11 = 68,
    KEYBOARD_SCANCODE_F12 = 69,

    KEYBOARD_SCANCODE_PRINTSCREEN = 70,
    KEYBOARD_SCANCODE_SCROLLLOCK = 71,
    KEYBOARD_SCANCODE_PAUSE = 72,
    KEYBOARD_SCANCODE_INSERT = 73, /**< insert on PC, help on some Mac keyboards (but
                                   does send code 73, not 117) */
    KEYBOARD_SCANCODE_HOME = 74,
    KEYBOARD_SCANCODE_PAGEUP = 75,
    KEYBOARD_SCANCODE_DELETE = 76,
    KEYBOARD_SCANCODE_END = 77,
    KEYBOARD_SCANCODE_PAGEDOWN = 78,
    KEYBOARD_SCANCODE_RIGHT = 79,
    KEYBOARD_SCANCODE_LEFT = 80,
    KEYBOARD_SCANCODE_DOWN = 81,
    KEYBOARD_SCANCODE_UP = 82,

    KEYBOARD_SCANCODE_NUMLOCKCLEAR = 83, /**< num lock on PC, clear on Mac keyboards
                                     */
    KEYBOARD_SCANCODE_KP_DIVIDE = 84,
    KEYBOARD_SCANCODE_KP_MULTIPLY = 85,
    KEYBOARD_SCANCODE_KP_MINUS = 86,
    KEYBOARD_SCANCODE_KP_PLUS = 87,
    KEYBOARD_SCANCODE_KP_ENTER = 88,
    KEYBOARD_SCANCODE_KP_1 = 89,
    KEYBOARD_SCANCODE_KP_2 = 90,
    KEYBOARD_SCANCODE_KP_3 = 91,
    KEYBOARD_SCANCODE_KP_4 = 92,
    KEYBOARD_SCANCODE_KP_5 = 93,
    KEYBOARD_SCANCODE_KP_6 = 94,
    KEYBOARD_SCANCODE_KP_7 = 95,
    KEYBOARD_SCANCODE_KP_8 = 96,
    KEYBOARD_SCANCODE_KP_9 = 97,
    KEYBOARD_SCANCODE_KP_0 = 98,
    KEYBOARD_SCANCODE_KP_PERIOD = 99,

    KEYBOARD_SCANCODE_NONUSBACKSLASH = 100, /**< This is the additional key that ISO
                                        *   keyboards have over ANSI ones,
                                        *   located between left shift and Y.
                                        *   Produces GRAVE ACCENT and TILDE in a
                                        *   US or UK Mac layout, REVERSE SOLIDUS
                                        *   (backslash) and VERTICAL LINE in a
                                        *   US or UK Windows layout, and
                                        *   LESS-THAN SIGN and GREATER-THAN SIGN
                                        *   in a Swiss German, German, or French
                                        *   layout. */
    KEYBOARD_SCANCODE_APPLICATION = 101, /**< windows contextual menu, compose */
    KEYBOARD_SCANCODE_POWER = 102, /**< The USB document says this is a status flag,
                               *   not a physical key - but some Mac keyboards
                               *   do have a power key. */
    KEYBOARD_SCANCODE_KP_EQUALS = 103,
    KEYBOARD_SCANCODE_F13 = 104,
    KEYBOARD_SCANCODE_F14 = 105,
    KEYBOARD_SCANCODE_F15 = 106,
    KEYBOARD_SCANCODE_F16 = 107,
    KEYBOARD_SCANCODE_F17 = 108,
    KEYBOARD_SCANCODE_F18 = 109,
    KEYBOARD_SCANCODE_F19 = 110,
    KEYBOARD_SCANCODE_F20 = 111,
    KEYBOARD_SCANCODE_F21 = 112,
    KEYBOARD_SCANCODE_F22 = 113,
    KEYBOARD_SCANCODE_F23 = 114,
    KEYBOARD_SCANCODE_F24 = 115,
    KEYBOARD_SCANCODE_EXECUTE = 116,
    KEYBOARD_SCANCODE_HELP = 117,
    KEYBOARD_SCANCODE_MENU = 118,
    KEYBOARD_SCANCODE_SELECT = 119,
    KEYBOARD_SCANCODE_STOP = 120,
    KEYBOARD_SCANCODE_AGAIN = 121,   /**< redo */
    KEYBOARD_SCANCODE_UNDO = 122,
    KEYBOARD_SCANCODE_CUT = 123,
    KEYBOARD_SCANCODE_COPY = 124,
    KEYBOARD_SCANCODE_PASTE = 125,
    KEYBOARD_SCANCODE_FIND = 126,
    KEYBOARD_SCANCODE_MUTE = 127,
    KEYBOARD_SCANCODE_VOLUMEUP = 128,
    KEYBOARD_SCANCODE_VOLUMEDOWN = 129,
/* not sure whether there's a reason to enable these */
/*     KEYBOARD_SCANCODE_LOCKINGCAPSLOCK = 130,  */
/*     KEYBOARD_SCANCODE_LOCKINGNUMLOCK = 131, */
/*     KEYBOARD_SCANCODE_LOCKINGSCROLLLOCK = 132, */
    KEYBOARD_SCANCODE_KP_COMMA = 133,
    KEYBOARD_SCANCODE_KP_EQUALSAS400 = 134,

    KEYBOARD_SCANCODE_INTERNATIONAL1 = 135, /**< used on Asian keyboards, see
                                            footnotes in USB doc */
    KEYBOARD_SCANCODE_INTERNATIONAL2 = 136,
    KEYBOARD_SCANCODE_INTERNATIONAL3 = 137, /**< Yen */
    KEYBOARD_SCANCODE_INTERNATIONAL4 = 138,
    KEYBOARD_SCANCODE_INTERNATIONAL5 = 139,
    KEYBOARD_SCANCODE_INTERNATIONAL6 = 140,
    KEYBOARD_SCANCODE_INTERNATIONAL7 = 141,
    KEYBOARD_SCANCODE_INTERNATIONAL8 = 142,
    KEYBOARD_SCANCODE_INTERNATIONAL9 = 143,
    KEYBOARD_SCANCODE_LANG1 = 144, /**< Hangul/English toggle */
    KEYBOARD_SCANCODE_LANG2 = 145, /**< Hanja conversion */
    KEYBOARD_SCANCODE_LANG3 = 146, /**< Katakana */
    KEYBOARD_SCANCODE_LANG4 = 147, /**< Hiragana */
    KEYBOARD_SCANCODE_LANG5 = 148, /**< Zenkaku/Hankaku */
    KEYBOARD_SCANCODE_LANG6 = 149, /**< reserved */
    KEYBOARD_SCANCODE_LANG7 = 150, /**< reserved */
    KEYBOARD_SCANCODE_LANG8 = 151, /**< reserved */
    KEYBOARD_SCANCODE_LANG9 = 152, /**< reserved */

    KEYBOARD_SCANCODE_ALTERASE = 153, /**< Erase-Eaze */
    KEYBOARD_SCANCODE_SYSREQ = 154,
    KEYBOARD_SCANCODE_CANCEL = 155,
    KEYBOARD_SCANCODE_CLEAR = 156,
    KEYBOARD_SCANCODE_PRIOR = 157,
    KEYBOARD_SCANCODE_RETURN2 = 158,
    KEYBOARD_SCANCODE_SEPARATOR = 159,
    KEYBOARD_SCANCODE_OUT = 160,
    KEYBOARD_SCANCODE_OPER = 161,
    KEYBOARD_SCANCODE_CLEARAGAIN = 162,
    KEYBOARD_SCANCODE_CRSEL = 163,
    KEYBOARD_SCANCODE_EXSEL = 164,

    KEYBOARD_SCANCODE_KP_00 = 176,
    KEYBOARD_SCANCODE_KP_000 = 177,
    KEYBOARD_SCANCODE_THOUSANDSSEPARATOR = 178,
    KEYBOARD_SCANCODE_DECIMALSEPARATOR = 179,
    KEYBOARD_SCANCODE_CURRENCYUNIT = 180,
    KEYBOARD_SCANCODE_CURRENCYSUBUNIT = 181,
    KEYBOARD_SCANCODE_KP_LEFTPAREN = 182,
    KEYBOARD_SCANCODE_KP_RIGHTPAREN = 183,
    KEYBOARD_SCANCODE_KP_LEFTBRACE = 184,
    KEYBOARD_SCANCODE_KP_RIGHTBRACE = 185,
    KEYBOARD_SCANCODE_KP_TAB = 186,
    KEYBOARD_SCANCODE_KP_BACKSPACE = 187,
    KEYBOARD_SCANCODE_KP_A = 188,
    KEYBOARD_SCANCODE_KP_B = 189,
    KEYBOARD_SCANCODE_KP_C = 190,
    KEYBOARD_SCANCODE_KP_D = 191,
    KEYBOARD_SCANCODE_KP_E = 192,
    KEYBOARD_SCANCODE_KP_F = 193,
    KEYBOARD_SCANCODE_KP_XOR = 194,
    KEYBOARD_SCANCODE_KP_POWER = 195,
    KEYBOARD_SCANCODE_KP_PERCENT = 196,
    KEYBOARD_SCANCODE_KP_LESS = 197,
    KEYBOARD_SCANCODE_KP_GREATER = 198,
    KEYBOARD_SCANCODE_KP_AMPERSAND = 199,
    KEYBOARD_SCANCODE_KP_DBLAMPERSAND = 200,
    KEYBOARD_SCANCODE_KP_VERTICALBAR = 201,
    KEYBOARD_SCANCODE_KP_DBLVERTICALBAR = 202,
    KEYBOARD_SCANCODE_KP_COLON = 203,
    KEYBOARD_SCANCODE_KP_HASH = 204,
    KEYBOARD_SCANCODE_KP_SPACE = 205,
    KEYBOARD_SCANCODE_KP_AT = 206,
    KEYBOARD_SCANCODE_KP_EXCLAM = 207,
    KEYBOARD_SCANCODE_KP_MEMSTORE = 208,
    KEYBOARD_SCANCODE_KP_MEMRECALL = 209,
    KEYBOARD_SCANCODE_KP_MEMCLEAR = 210,
    KEYBOARD_SCANCODE_KP_MEMADD = 211,
    KEYBOARD_SCANCODE_KP_MEMSUBTRACT = 212,
    KEYBOARD_SCANCODE_KP_MEMMULTIPLY = 213,
    KEYBOARD_SCANCODE_KP_MEMDIVIDE = 214,
    KEYBOARD_SCANCODE_KP_PLUSMINUS = 215,
    KEYBOARD_SCANCODE_KP_CLEAR = 216,
    KEYBOARD_SCANCODE_KP_CLEARENTRY = 217,
    KEYBOARD_SCANCODE_KP_BINARY = 218,
    KEYBOARD_SCANCODE_KP_OCTAL = 219,
    KEYBOARD_SCANCODE_KP_DECIMAL = 220,
    KEYBOARD_SCANCODE_KP_HEXADECIMAL = 221,

    KEYBOARD_SCANCODE_LCTRL = 224,
    KEYBOARD_SCANCODE_LSHIFT = 225,
    KEYBOARD_SCANCODE_LALT = 226, /**< alt, option */
    KEYBOARD_SCANCODE_LGUI = 227, /**< windows, command (apple), meta */
    KEYBOARD_SCANCODE_RCTRL = 228,
    KEYBOARD_SCANCODE_RSHIFT = 229,
    KEYBOARD_SCANCODE_RALT = 230, /**< alt gr, option */
    KEYBOARD_SCANCODE_RGUI = 231, /**< windows, command (apple), meta */

    KEYBOARD_SCANCODE_MODE = 257,    /**< I'm not sure if this is really not covered
                                 *   by any of the above, but since there's a
                                 *   special KMOD_MODE for it I'm adding it here
                                 */

    /* @} *//* Usage page 0x07 */

    /**
     *  \name Usage page 0x0C
     *
     *  These values are mapped from usage page 0x0C (USB consumer page).
     */
    /* @{ */

    KEYBOARD_SCANCODE_AUDIONEXT = 258,
    KEYBOARD_SCANCODE_AUDIOPREV = 259,
    KEYBOARD_SCANCODE_AUDIOSTOP = 260,
    KEYBOARD_SCANCODE_AUDIOPLAY = 261,
    KEYBOARD_SCANCODE_AUDIOMUTE = 262,
    KEYBOARD_SCANCODE_MEDIASELECT = 263,
    KEYBOARD_SCANCODE_WWW = 264,
    KEYBOARD_SCANCODE_MAIL = 265,
    KEYBOARD_SCANCODE_CALCULATOR = 266,
    KEYBOARD_SCANCODE_COMPUTER = 267,
    KEYBOARD_SCANCODE_AC_SEARCH = 268,
    KEYBOARD_SCANCODE_AC_HOME = 269,
    KEYBOARD_SCANCODE_AC_BACK = 270,
    KEYBOARD_SCANCODE_AC_FORWARD = 271,
    KEYBOARD_SCANCODE_AC_STOP = 272,
    KEYBOARD_SCANCODE_AC_REFRESH = 273,
    KEYBOARD_SCANCODE_AC_BOOKMARKS = 274,

    /* @} *//* Usage page 0x0C */

    /**
     *  \name Walther keys
     *
     *  These are values that Christian Walther added (for mac keyboard?).
     */
    /* @{ */

    KEYBOARD_SCANCODE_BRIGHTNESSDOWN = 275,
    KEYBOARD_SCANCODE_BRIGHTNESSUP = 276,
    KEYBOARD_SCANCODE_DISPLAYSWITCH = 277, /**< display mirroring/dual display
                                           switch, video mode switch */
    KEYBOARD_SCANCODE_KBDILLUMTOGGLE = 278,
    KEYBOARD_SCANCODE_KBDILLUMDOWN = 279,
    KEYBOARD_SCANCODE_KBDILLUMUP = 280,
    KEYBOARD_SCANCODE_EJECT = 281,
    KEYBOARD_SCANCODE_SLEEP = 282,

    KEYBOARD_SCANCODE_APP1 = 283,
    KEYBOARD_SCANCODE_APP2 = 284,

    /* @} *//* Walther keys */

    /* Add any other keys here. */

    KEYBOARD_NUM_SCANCODES = 512 /**< not a key, just marks the number of scancodes
                                 for array bounds */
} Keyboard_Scancode;

#define SCANCODE_MASK (1<<30)
#define KEYBOARD_SCANCODE_TO_KEYCODE(x) (x | SCANCODE_MASK)
enum Keycode
{
    KEY_UNKNOWN = 0,

    KEY_RETURN = '\r',
    KEY_ESCAPE = '\033',
    KEY_BACKSPACE = '\b',
    KEY_TAB = '\t',
    KEY_SPACE = ' ',
    KEY_EXCLAIM = '!',
    KEY_QUOTEDBL = '"',
    KEY_HASH = '#',
    KEY_PERCENT = '%',
    KEY_DOLLAR = '$',
    KEY_AMPERSAND = '&',
    KEY_QUOTE = '\'',
    KEY_LEFTPAREN = '(',
    KEY_RIGHTPAREN = ')',
    KEY_ASTERISK = '*',
    KEY_PLUS = '+',
    KEY_COMMA = ',',
    KEY_MINUS = '-',
    KEY_PERIOD = '.',
    KEY_SLASH = '/',
    KEY_0 = '0',
    KEY_1 = '1',
    KEY_2 = '2',
    KEY_3 = '3',
    KEY_4 = '4',
    KEY_5 = '5',
    KEY_6 = '6',
    KEY_7 = '7',
    KEY_8 = '8',
    KEY_9 = '9',
    KEY_COLON = ':',
    KEY_SEMICOLON = ';',
    KEY_LESS = '<',
    KEY_EQUALS = '=',
    KEY_GREATER = '>',
    KEY_QUESTION = '?',
    KEY_AT = '@',
       // Skip uppercase letters
    KEY_LEFTBRACKET = '[',
    KEY_BACKSLASH = '\\',
    KEY_RIGHTBRACKET = ']',
    KEY_CARET = '^',
    KEY_UNDERSCORE = '_',
    KEY_BACKQUOTE = '`',
    KEY_a = 'a',
    KEY_b = 'b',
    KEY_c = 'c',
    KEY_d = 'd',
    KEY_e = 'e',
    KEY_f = 'f',
    KEY_g = 'g',
    KEY_h = 'h',
    KEY_i = 'i',
    KEY_j = 'j',
    KEY_k = 'k',
    KEY_l = 'l',
    KEY_m = 'm',
    KEY_n = 'n',
    KEY_o = 'o',
    KEY_p = 'p',
    KEY_q = 'q',
    KEY_r = 'r',
    KEY_s = 's',
    KEY_t = 't',
    KEY_u = 'u',
    KEY_v = 'v',
    KEY_w = 'w',
    KEY_x = 'x',
    KEY_y = 'y',
    KEY_z = 'z',


    KEY_CAPSLOCK = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_CAPSLOCK),

    KEY_F1 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F1),
    KEY_F2 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F2),
    KEY_F3 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F3),
    KEY_F4 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F4),
    KEY_F5 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F5),
    KEY_F6 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F6),
    KEY_F7 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F7),
    KEY_F8 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F8),
    KEY_F9 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F9),
    KEY_F10 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F10),
    KEY_F11 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F11),
    KEY_F12 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F12),

    KEY_PRINTSCREEN = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_PRINTSCREEN),
    KEY_SCROLLLOCK = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_SCROLLLOCK),
    KEY_PAUSE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_PAUSE),
    KEY_INSERT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_INSERT),
    KEY_HOME = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_HOME),
    KEY_PAGEUP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_PAGEUP),
    KEY_DELETE = '\177',
    KEY_END = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_END),
    KEY_PAGEDOWN = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_PAGEDOWN),
    KEY_RIGHT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_RIGHT),
    KEY_LEFT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_LEFT),
    KEY_DOWN = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_DOWN),
    KEY_UP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_UP),

    KEY_NUMLOCKCLEAR = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_NUMLOCKCLEAR),
    KEY_KP_DIVIDE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_DIVIDE),
    KEY_KP_MULTIPLY = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_MULTIPLY),
    KEY_KP_MINUS = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_MINUS),
    KEY_KP_PLUS = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_PLUS),
    KEY_KP_ENTER = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_ENTER),
    KEY_KP_1 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_1),
    KEY_KP_2 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_2),
    KEY_KP_3 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_3),
    KEY_KP_4 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_4),
    KEY_KP_5 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_5),
    KEY_KP_6 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_6),
    KEY_KP_7 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_7),
    KEY_KP_8 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_8),
    KEY_KP_9 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_9),
    KEY_KP_0 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_0),
    KEY_KP_PERIOD = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_PERIOD),

    KEY_APPLICATION = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_APPLICATION),
    KEY_POWER = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_POWER),
    KEY_KP_EQUALS = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_EQUALS),
    KEY_F13 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F13),
    KEY_F14 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F14),
    KEY_F15 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F15),
    KEY_F16 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F16),
    KEY_F17 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F17),
    KEY_F18 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F18),
    KEY_F19 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F19),
    KEY_F20 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F20),
    KEY_F21 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F21),
    KEY_F22 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F22),
    KEY_F23 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F23),
    KEY_F24 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_F24),
    KEY_EXECUTE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_EXECUTE),
    KEY_HELP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_HELP),
    KEY_MENU = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_MENU),
    KEY_SELECT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_SELECT),
    KEY_STOP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_STOP),
    KEY_AGAIN = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AGAIN),
    KEY_UNDO = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_UNDO),
    KEY_CUT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_CUT),
    KEY_COPY = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_COPY),
    KEY_PASTE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_PASTE),
    KEY_FIND = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_FIND),
    KEY_MUTE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_MUTE),
    KEY_VOLUMEUP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_VOLUMEUP),
    KEY_VOLUMEDOWN = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_VOLUMEDOWN),
    KEY_KP_COMMA = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_COMMA),
    KEY_KP_EQUALSAS400 =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_EQUALSAS400),

    KEY_ALTERASE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_ALTERASE),
    KEY_SYSREQ = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_SYSREQ),
    KEY_CANCEL = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_CANCEL),
    KEY_CLEAR = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_CLEAR),
    KEY_PRIOR = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_PRIOR),
    KEY_RETURN2 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_RETURN2),
    KEY_SEPARATOR = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_SEPARATOR),
    KEY_OUT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_OUT),
    KEY_OPER = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_OPER),
    KEY_CLEARAGAIN = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_CLEARAGAIN),
    KEY_CRSEL = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_CRSEL),
    KEY_EXSEL = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_EXSEL),

    KEY_KP_00 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_00),
    KEY_KP_000 = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_000),
    KEY_THOUSANDSSEPARATOR =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_THOUSANDSSEPARATOR),
    KEY_DECIMALSEPARATOR =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_DECIMALSEPARATOR),
    KEY_CURRENCYUNIT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_CURRENCYUNIT),
    KEY_CURRENCYSUBUNIT =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_CURRENCYSUBUNIT),
    KEY_KP_LEFTPAREN = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_LEFTPAREN),
    KEY_KP_RIGHTPAREN = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_RIGHTPAREN),
    KEY_KP_LEFTBRACE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_LEFTBRACE),
    KEY_KP_RIGHTBRACE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_RIGHTBRACE),
    KEY_KP_TAB = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_TAB),
    KEY_KP_BACKSPACE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_BACKSPACE),
    KEY_KP_A = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_A),
    KEY_KP_B = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_B),
    KEY_KP_C = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_C),
    KEY_KP_D = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_D),
    KEY_KP_E = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_E),
    KEY_KP_F = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_F),
    KEY_KP_XOR = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_XOR),
    KEY_KP_POWER = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_POWER),
    KEY_KP_PERCENT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_PERCENT),
    KEY_KP_LESS = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_LESS),
    KEY_KP_GREATER = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_GREATER),
    KEY_KP_AMPERSAND = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_AMPERSAND),
    KEY_KP_DBLAMPERSAND =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_DBLAMPERSAND),
    KEY_KP_VERTICALBAR =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_VERTICALBAR),
    KEY_KP_DBLVERTICALBAR =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_DBLVERTICALBAR),
    KEY_KP_COLON = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_COLON),
    KEY_KP_HASH = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_HASH),
    KEY_KP_SPACE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_SPACE),
    KEY_KP_AT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_AT),
    KEY_KP_EXCLAM = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_EXCLAM),
    KEY_KP_MEMSTORE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_MEMSTORE),
    KEY_KP_MEMRECALL = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_MEMRECALL),
    KEY_KP_MEMCLEAR = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_MEMCLEAR),
    KEY_KP_MEMADD = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_MEMADD),
    KEY_KP_MEMSUBTRACT =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_MEMSUBTRACT),
    KEY_KP_MEMMULTIPLY =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_MEMMULTIPLY),
    KEY_KP_MEMDIVIDE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_MEMDIVIDE),
    KEY_KP_PLUSMINUS = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_PLUSMINUS),
    KEY_KP_CLEAR = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_CLEAR),
    KEY_KP_CLEARENTRY = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_CLEARENTRY),
    KEY_KP_BINARY = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_BINARY),
    KEY_KP_OCTAL = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_OCTAL),
    KEY_KP_DECIMAL = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_DECIMAL),
    KEY_KP_HEXADECIMAL =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KP_HEXADECIMAL),

    KEY_LCTRL = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_LCTRL),
    KEY_LSHIFT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_LSHIFT),
    KEY_LALT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_LALT),
    KEY_LGUI = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_LGUI),
    KEY_RCTRL = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_RCTRL),
    KEY_RSHIFT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_RSHIFT),
    KEY_RALT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_RALT),
    KEY_RGUI = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_RGUI),

    KEY_MODE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_MODE),

    KEY_AUDIONEXT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AUDIONEXT),
    KEY_AUDIOPREV = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AUDIOPREV),
    KEY_AUDIOSTOP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AUDIOSTOP),
    KEY_AUDIOPLAY = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AUDIOPLAY),
    KEY_AUDIOMUTE = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AUDIOMUTE),
    KEY_MEDIASELECT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_MEDIASELECT),
    KEY_WWW = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_WWW),
    KEY_MAIL = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_MAIL),
    KEY_CALCULATOR = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_CALCULATOR),
    KEY_COMPUTER = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_COMPUTER),
    KEY_AC_SEARCH = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AC_SEARCH),
    KEY_AC_HOME = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AC_HOME),
    KEY_AC_BACK = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AC_BACK),
    KEY_AC_FORWARD = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AC_FORWARD),
    KEY_AC_STOP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AC_STOP),
    KEY_AC_REFRESH = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AC_REFRESH),
    KEY_AC_BOOKMARKS = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_AC_BOOKMARKS),

    KEY_BRIGHTNESSDOWN =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_BRIGHTNESSDOWN),
    KEY_BRIGHTNESSUP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_BRIGHTNESSUP),
    KEY_DISPLAYSWITCH = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_DISPLAYSWITCH),
    KEY_KBDILLUMTOGGLE =
        KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KBDILLUMTOGGLE),
    KEY_KBDILLUMDOWN = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KBDILLUMDOWN),
    KEY_KBDILLUMUP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_KBDILLUMUP),
    KEY_EJECT = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_EJECT),
    KEY_SLEEP = KEYBOARD_SCANCODE_TO_KEYCODE(KEYBOARD_SCANCODE_SLEEP)
};


typedef enum
{
    KEYMOD_NONE = 0x0000,
    KEYMOD_LSHIFT = 0x0001,
    KEYMOD_RSHIFT = 0x0002,
    KEYMOD_LCTRL = 0x0040,
    KEYMOD_RCTRL = 0x0080,
    KEYMOD_LALT = 0x0100,
    KEYMOD_RALT = 0x0200,
    KEYMOD_LGUI = 0x0400,
    KEYMOD_RGUI = 0x0800,
    KEYMOD_NUM = 0x1000,
    KEYMOD_CAPS = 0x2000,
    KEYMOD_MODE = 0x4000,
    KEYMOD_RESERVED = 0x8000
} Keymod;




#define KEYMOD_CTRL   (KEYMOD_LCTRL|KEYMOD_RCTRL)
#define KEYMOD_SHIFT  (KEYMOD_LSHIFT|KEYMOD_RSHIFT)
#define KEYMOD_ALT    (KEYMOD_LALT|KEYMOD_RALT)
#define KEYMOD_GUI    (KEYMOD_LGUI|KEYMOD_RGUI)

}

#endif
